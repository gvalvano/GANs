#  Copyright 2019 Gabriele Valvano
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.

import numpy as np


def get_splits():
    """""
    Returns an array of splits into validation, test and train indices.
    """

    splits = {

        # ------------------------------------------------------------------------------------------------------------
        # splits with just 1 training samples (1.5% of data used for training (70)):

        'perc1p5': {
            'split0': {'test': [5, 39, 77, 82, 78, 10, 64, 24, 30, 73, 80, 41, 36, 60, 72],
                       'validation': [84, 32, 27, 96, 17, 18, 57, 81, 79, 22, 1, 44, 49, 25, 95],
                       'train_unsup': [37, 50, 53, 100, 38, 19, 61, 74, 97, 31, 91, 35, 56, 94, 26, 69, 46, 59, 4, 89,
                                       71, 6, 52, 43, 45, 63, 93, 14, 98, 88, 21, 28, 99, 54, 90],
                       'train_disc': [2, 76, 34, 85, 70, 86, 3, 8, 51, 40, 7, 13, 47, 55, 12, 58, 87, 9, 65, 62, 33, 42,
                                      23, 92, 29, 11, 83, 68, 75, 67, 16, 48, 66, 20, 15],
                       'train_sup': [93]
                       },
            'split1': {'test': [5, 39, 77, 82, 78, 10, 64, 24, 30, 73, 80, 41, 36, 60, 72],
                       'validation': [84, 32, 27, 96, 17, 18, 57, 81, 79, 22, 1, 44, 49, 25, 95],
                       'train_unsup': [37, 50, 53, 100, 38, 19, 61, 74, 97, 31, 91, 35, 56, 94, 26, 69, 46, 59, 4, 89,
                                       71, 6, 52, 43, 45, 63, 93, 14, 98, 88, 21, 28, 99, 54, 90],
                       'train_disc': [2, 76, 34, 85, 70, 86, 3, 8, 51, 40, 7, 13, 47, 55, 12, 58, 87, 9, 65, 62, 33, 42,
                                      23, 92, 29, 11, 83, 68, 75, 67, 16, 48, 66, 20, 15],
                       'train_sup': [96]
                       },
            'split2': {'test': [5, 39, 77, 82, 78, 10, 64, 24, 30, 73, 80, 41, 36, 60, 72],
                       'validation': [84, 32, 27, 96, 17, 18, 57, 81, 79, 22, 1, 44, 49, 25, 95],
                       'train_unsup': [37, 50, 53, 100, 38, 19, 61, 74, 97, 31, 91, 35, 56, 94, 26, 69, 46, 59, 4, 89,
                                       71, 6, 52, 43, 45, 63, 93, 14, 98, 88, 21, 28, 99, 54, 90],
                       'train_disc': [2, 76, 34, 85, 70, 86, 3, 8, 51, 40, 7, 13, 47, 55, 12, 58, 87, 9, 65, 62, 33, 42,
                                      23, 92, 29, 11, 83, 68, 75, 67, 16, 48, 66, 20, 15],
                       'train_sup': [57]
                       }
        },

        # ------------------------------------------------------------------------------------------------------------
        # splits with just 2 training samples (3% of data used for training (70)):

        'perc3': {
            'split0': {'test': [5, 39, 77, 82, 78, 10, 64, 24, 30, 73, 80, 41, 36, 60, 72],
                       'validation': [84, 32, 27, 96, 17, 18, 57, 81, 79, 22, 1, 44, 49, 25, 95],
                       'train_unsup': [37, 50, 53, 100, 38, 19, 61, 74, 97, 31, 91, 35, 56, 94, 26, 69, 46, 59, 4, 89,
                                       71, 6, 52, 43, 45, 63, 93, 14, 98, 88, 21, 28, 99, 54, 90],
                       'train_disc': [2, 76, 34, 85, 70, 86, 3, 8, 51, 40, 7, 13, 47, 55, 12, 58, 87, 9, 65, 62, 33, 42,
                                      26, 92, 29, 11, 83, 68, 75, 67, 16, 48, 66, 20, 15],
                       'train_sup': [26, 83]
                       },
            'split1': {'test': [5, 39, 77, 82, 78, 10, 64, 24, 30, 73, 80, 41, 36, 60, 72],
                       'validation': [84, 32, 27, 96, 17, 18, 57, 81, 79, 22, 1, 44, 49, 25, 95],
                       'train_unsup': [37, 50, 53, 100, 38, 19, 61, 74, 97, 31, 91, 35, 56, 94, 26, 69, 46, 59, 4, 89,
                                       71, 6, 52, 43, 45, 63, 93, 14, 98, 88, 21, 28, 99, 54, 90],
                       'train_disc': [2, 76, 34, 85, 70, 86, 3, 8, 51, 40, 7, 13, 47, 55, 12, 58, 87, 9, 65, 62, 33, 42,
                                      23, 92, 29, 11, 83, 68, 75, 67, 16, 48, 66, 20, 15],
                       'train_sup': [31, 91]
                       },
            'split2': {'test': [5, 39, 77, 82, 78, 10, 64, 24, 30, 73, 80, 41, 36, 60, 72],
                       'validation': [84, 32, 27, 96, 17, 18, 57, 81, 79, 22, 1, 44, 49, 25, 95],
                       'train_unsup': [37, 50, 53, 100, 38, 19, 61, 74, 97, 31, 91, 35, 56, 94, 26, 69, 46, 59, 4, 89,
                                       71, 6, 52, 43, 45, 63, 93, 14, 98, 88, 21, 28, 99, 54, 90],
                       'train_disc': [2, 76, 34, 85, 70, 86, 3, 8, 51, 40, 7, 13, 47, 55, 12, 58, 87, 9, 65, 62, 33, 42,
                                      23, 92, 29, 11, 83, 68, 75, 67, 16, 48, 66, 20, 15],
                       'train_sup': [96, 27]
                       },
        },

        # ------------------------------------------------------------------------------------------------------------
        # splits with just 4 training samples (6% of data used for training (70)):

        'perc5': {
            'split0': {'test': [5, 39, 77, 82, 78, 10, 64, 24, 30, 73, 80, 41, 36, 60, 72],
                       'validation': [84, 32, 27, 96, 17, 18, 57, 81, 79, 22, 1, 44, 49, 25, 95],
                       'train_unsup': [37, 50, 53, 100, 38, 19, 61, 74, 97, 31, 91, 35, 56, 94, 26, 69, 46, 59, 4, 89,
                                       71, 6, 52, 43, 45, 63, 93, 14, 98, 88, 21, 28, 99, 54, 90],
                       'train_disc': [2, 76, 34, 85, 70, 86, 3, 8, 51, 40, 7, 13, 47, 55, 12, 58, 87, 9, 65, 62, 33, 42,
                                      23, 92, 29, 11, 83, 68, 75, 67, 16, 48, 66, 20, 15],
                       'train_sup': [9, 65, 62, 33]
                       },
            'split1': {'test': [5, 39, 77, 82, 78, 10, 64, 24, 30, 73, 80, 41, 36, 60, 72],
                       'validation': [84, 32, 27, 96, 17, 18, 57, 81, 79, 22, 1, 44, 49, 25, 95],
                       'train_unsup': [37, 50, 53, 100, 38, 19, 61, 74, 97, 31, 91, 35, 56, 94, 26, 69, 46, 59, 4, 89,
                                       71, 6, 52, 43, 45, 63, 93, 14, 98, 88, 21, 28, 99, 54, 90],
                       'train_disc': [2, 76, 34, 85, 70, 86, 3, 8, 51, 40, 7, 13, 47, 55, 12, 58, 87, 9, 65, 62, 33, 42,
                                      23, 92, 29, 11, 83, 68, 75, 67, 16, 48, 66, 20, 15],
                       'train_sup': [16, 48, 66, 67]
                       },
            'split2': {'test': [5, 39, 77, 82, 78, 10, 64, 24, 30, 73, 80, 41, 36, 60, 72],
                       'validation': [84, 32, 27, 96, 17, 18, 57, 81, 79, 22, 1, 44, 49, 25, 95],
                       'train_unsup': [37, 50, 53, 100, 38, 19, 61, 74, 97, 31, 91, 35, 56, 94, 26, 69, 46, 59, 4, 89,
                                       71, 6, 52, 43, 45, 63, 93, 14, 98, 88, 21, 28, 99, 54, 90],
                       'train_disc': [2, 76, 34, 85, 70, 86, 3, 8, 51, 40, 7, 13, 47, 55, 12, 58, 87, 9, 65, 62, 33, 42,
                                      23, 92, 29, 11, 83, 68, 75, 67, 16, 48, 66, 20, 15],
                       'train_sup': [96, 57, 97, 85]
                       },
        },

        # ------------------------------------------------------------------------------------------------------------
        #

        'perc10': {
            'split0': {'test': [5, 39, 77, 82, 78, 10, 64, 24, 30, 73, 80, 41, 36, 60, 72],
                       'validation': [84, 32, 27, 96, 17, 18, 57, 81, 79, 22, 1, 44, 49, 25, 95],
                       'train_unsup': [37, 50, 53, 100, 38, 19, 61, 74, 97, 31, 91, 35, 56, 94, 26, 69, 46, 59, 4, 89,
                                       71, 6, 52, 43, 45, 63, 93, 14, 98, 88, 21, 28, 99, 54, 90, 12, 88],
                       'train_disc': [2, 76, 34, 85, 70, 86, 3, 8, 51, 40, 7, 13, 47, 55, 12, 58, 87, 9, 65, 62, 33, 42,
                                      23, 92, 29, 11, 83, 68, 75, 67, 16, 48, 66, 20, 15],
                       'train_sup': [3, 21, 33, 42, 63, 76, 98]
                       },
            'split1': {'test': [5, 39, 77, 82, 78, 10, 64, 24, 30, 73, 80, 41, 36, 60, 72],
                       'validation': [84, 32, 27, 96, 17, 18, 57, 81, 79, 22, 1, 44, 49, 25, 95],
                       'train_unsup': [37, 50, 53, 100, 38, 19, 61, 74, 97, 31, 91, 35, 56, 94, 26, 69, 46, 59, 4, 89,
                                       71, 6, 52, 43, 45, 63, 93, 14, 98, 88, 21, 28, 99, 54, 90, 19, 74],
                       'train_disc': [2, 76, 34, 85, 70, 86, 3, 8, 51, 40, 7, 13, 47, 55, 12, 58, 87, 9, 65, 62, 33, 42,
                                      23, 92, 29, 11, 83, 68, 75, 67, 16, 48, 66, 20, 15],
                       'train_sup': [2, 9, 31, 37, 50, 61, 99]
                       },
            'split2': {'test': [5, 39, 77, 82, 78, 10, 64, 24, 30, 73, 80, 41, 36, 60, 72],
                       'validation': [84, 32, 27, 96, 17, 18, 57, 81, 79, 22, 1, 44, 49, 25, 95],
                       'train_unsup': [37, 50, 53, 100, 38, 19, 61, 74, 97, 31, 91, 35, 56, 94, 26, 69, 46, 59, 4, 89,
                                       71, 6, 52, 43, 45, 63, 93, 14, 98, 88, 21, 28, 99, 54, 90, 51, 20],
                       'train_disc': [2, 76, 34, 85, 70, 86, 3, 8, 51, 40, 7, 13, 47, 55, 12, 58, 87, 9, 65, 62, 33, 42,
                                      23, 92, 29, 11, 83, 68, 75, 67, 16, 48, 66, 20, 15],
                       'train_sup': [7, 28, 40, 62, 71, 87, 93]
                       },
        },


        # ------------------------------------------------------------------------------------------------------------
        # splits with just 18 training samples (25% of data used for training (70)):

        'perc25': {
            'split0': {'test': [5, 39, 77, 82, 78, 10, 64, 24, 30, 73, 80, 41, 36, 60, 72],
                       'validation': [84, 32, 27, 96, 17, 18, 57, 81, 79, 22, 1, 44, 49, 25, 95],
                       'train_unsup': [37, 50, 53, 100, 38, 19, 61, 74, 97, 31, 91, 35, 56, 94, 26, 69, 46, 59, 4, 89,
                                       71, 6, 52, 43, 45, 63, 93, 14, 98, 88, 21, 28, 99, 54, 90],
                       'train_disc': [2, 76, 34, 85, 70, 86, 3, 8, 51, 40, 7, 13, 47, 55, 12, 58, 87, 9, 65, 62, 33, 42,
                                      23, 92, 29, 11, 83, 68, 75, 67, 16, 48, 66, 20, 15],
                       'train_sup': [3, 7, 8, 12, 21, 33, 42, 48, 58, 63, 67, 74, 76, 88, 91, 92, 97, 98]
                       },
            'split1': {'test': [5, 39, 77, 82, 78, 10, 64, 24, 30, 73, 80, 41, 36, 60, 72],
                       'validation': [84, 32, 27, 96, 17, 18, 57, 81, 79, 22, 1, 44, 49, 25, 95],
                       'train_unsup': [37, 50, 53, 100, 38, 19, 61, 74, 97, 31, 91, 35, 56, 94, 26, 69, 46, 59, 4, 89,
                                       71, 6, 52, 43, 45, 63, 93, 14, 98, 88, 21, 28, 99, 54, 90],
                       'train_disc': [2, 76, 34, 85, 70, 86, 3, 8, 51, 40, 7, 13, 47, 55, 12, 58, 87, 9, 65, 62, 33, 42,
                                      23, 92, 29, 11, 83, 68, 75, 67, 16, 48, 66, 20, 15],
                       'train_sup': [2, 8, 9, 11, 19, 31, 37, 45, 50, 52, 58, 61, 63, 66, 74, 83, 93, 99]
                       },
            'split2': {'test': [5, 39, 77, 82, 78, 10, 64, 24, 30, 73, 80, 41, 36, 60, 72],
                       'validation': [84, 32, 27, 96, 17, 18, 57, 81, 79, 22, 1, 44, 49, 25, 95],
                       'train_unsup': [37, 50, 53, 100, 38, 19, 61, 74, 97, 31, 91, 35, 56, 94, 26, 69, 46, 59, 4, 89,
                                       71, 6, 52, 43, 45, 63, 93, 14, 98, 88, 21, 28, 99, 54, 90],
                       'train_disc': [2, 76, 34, 85, 70, 86, 3, 8, 51, 40, 7, 13, 47, 55, 12, 58, 87, 9, 65, 62, 33, 42,
                                      23, 92, 29, 11, 83, 68, 75, 67, 16, 48, 66, 20, 15],
                       'train_sup': [6, 7, 12, 15, 20, 28, 37, 40, 46, 48, 51, 62, 65, 69, 71, 87, 90, 93]
                       },
        },

        # ------------------------------------------------------------------------------------------------------------
        # splits with just 35 training samples (50% of data used for training (70)):

        'perc50': {
            'split0': {'test': [5, 39, 77, 82, 78, 10, 64, 24, 30, 73, 80, 41, 36, 60, 72],
                       'validation': [84, 32, 27, 96, 17, 18, 57, 81, 79, 22, 1, 44, 49, 25, 95],
                       'train_disc': [2, 76, 34, 85, 70, 86, 3, 8, 51, 40, 7, 13, 47, 55, 12, 58, 87, 9, 65, 62, 33, 42,
                                      23, 92, 29, 11, 83, 68, 75, 67, 16, 48, 66, 20, 15],
                       'train_unsup': [4, 6, 14, 19, 21, 26, 28, 31, 35, 37, 38, 43, 45, 46, 50, 52, 53, 54, 56, 59, 61,
                                       63, 69, 71, 74, 88, 89, 90, 91, 93, 94, 97, 98, 99, 100],
                       'train_sup': [4, 6, 14, 19, 21, 26, 28, 31, 35, 37, 38, 43, 45, 46, 50, 52, 53, 54, 56, 59, 61,
                                     63, 69, 71, 74, 88, 89, 90, 91, 93, 94, 97, 98, 99, 100]
                       },
            'split1': {'test': [99, 42,  3, 46, 48, 49, 77, 18, 45, 61, 69,  9, 90, 19,  3],
                       'validation': [36, 70, 70, 66, 23, 71, 38, 96, 23, 20, 58, 80, 24, 47, 50],
                       'train_disc': [63, 78, 56, 87, 44, 81, 11, 63, 95, 67, 17, 16, 67, 85, 73, 10, 30, 16, 73, 15,
                                      43, 64, 82,  2, 78, 17, 76, 28, 63, 14, 57,  8, 14, 60, 10],
                       'train_unsup': [21, 39, 97, 94, 72, 1, 91, 39, 100, 86, 51, 21, 94, 32, 79, 5, 89, 92, 51, 98, 32,
                                       34, 98, 72, 100, 94, 88, 27, 32, 35, 97, 83, 94, 98, 41],
                       'train_sup': [21, 39, 97, 94, 72, 1, 91, 39, 100, 86, 51, 21, 94, 32, 79, 5, 89, 92, 51, 98, 32,
                                     34, 98, 72, 100, 94, 88, 27, 32, 35, 97, 83, 94, 98, 41]
                       },
            'split2': {'test': [93, 84, 68, 55, 91, 18, 40, 38, 13, 79, 59, 90, 59, 65, 41],
                       'validation': [45, 57, 10, 85, 17, 30, 52, 3, 15, 17, 74, 17, 12, 98, 15],
                       'train_disc': [72, 29, 87, 78, 97, 88, 77, 64, 77, 63, 46, 81, 24, 11, 89, 47, 66, 67, 34, 62, 82,
                                      0, 14, 69, 25, 80, 51, 35, 99, 22, 22, 25, 42, 56, 81],
                       'train_unsup': [96, 7, 83, 86, 86, 49, 92, 76, 44, 70, 61, 54, 33, 44, 48, 28, 61, 5, 20, 54, 75,
                                       86, 95, 16, 6, 61, 53, 49, 60, 28, 95, 6, 76, 6, 28],
                       'train_sup': [96, 7, 83, 86, 86, 49, 92, 76, 44, 70, 61, 54, 33, 44, 48, 28, 61, 5, 20, 54, 75,
                                     86, 95, 16, 6, 61, 53, 49, 60, 28, 95, 6, 76, 6, 28]
                       }
        },

        # -----------------
        # 100% of the training data (70 samples):

        'perc100': {
            'split0': {'test': [5, 39, 77, 82, 78, 10, 64, 24, 30, 73, 80, 41, 36, 60, 72],
                       'validation': [84, 32, 27, 96, 17, 18, 57, 81, 79, 22, 1, 44, 49, 25, 95],
                       'train_unsup': [37, 50, 53, 100, 38, 19, 61, 74, 97, 31, 91, 35, 56, 94, 26, 69, 46, 59, 4, 89,
                                       71, 6, 52, 43, 45, 63, 93, 14, 98, 88, 21, 28, 99, 54, 90],
                       'train_disc': [2, 76, 34, 85, 70, 86, 3, 8, 51, 40, 7, 13, 47, 55, 12, 58, 87, 9, 65, 62, 33, 42,
                                      23, 92, 29, 11, 83, 68, 75, 67, 16, 48, 66, 20, 15],
                       'train_sup': [37, 50, 53, 100, 38, 19, 61, 74, 97, 31, 91, 35, 56, 94, 26, 69, 46, 59, 4, 89,
                                     71, 6, 52, 43, 45, 63, 93, 14, 98, 88, 21, 28, 99, 54, 90, 2, 76, 34, 85, 70, 86,
                                     3, 8, 51, 40, 7, 13, 47, 55, 12, 58, 87, 9, 65, 62, 33, 42, 23, 92, 29, 11, 83, 68,
                                     75, 67, 16, 48, 66, 20, 15]
                       },
            'split1': {'test': [1, 5, 12, 19, 26, 33, 40, 47, 54, 61, 68, 75, 82, 89, 96],
                       'validation': [2, 14, 21, 28, 34, 45, 54, 63, 76, 85, 88, 90, 93, 98, 99],
                       'train_unsup': [37, 50, 53, 100, 38, 19, 61, 74, 97, 31, 91, 35, 56, 94, 26, 69, 46, 59, 4, 89,
                                       71, 6, 52, 43, 45, 63, 93, 14, 98, 88, 21, 28, 99, 54, 90],
                       'train_disc': [2, 76, 34, 85, 70, 86, 3, 8, 51, 40, 7, 13, 47, 55, 12, 58, 87, 9, 65, 62, 33, 42,
                                      23, 92, 29, 11, 83, 68, 75, 67, 16, 48, 66, 20, 15],
                       'train_sup': [3, 4, 6, 7, 8, 9, 10, 11, 13, 15, 16, 17, 18, 20, 22, 23, 24, 25, 27, 29, 30, 31,
                                     32, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58,
                                     59, 60, 62, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 81, 83, 84, 86,
                                     87, 91, 92, 94, 95, 97, 100],
                       },
            'split2': {'test': [1, 6, 13, 20, 27, 34, 41, 48, 55, 62, 69, 76, 83, 90, 97],
                       'validation': [7, 14, 21, 28, 35, 42, 49, 52, 56, 63, 70, 77, 84, 91, 98],
                       'train_unsup': [37, 50, 53, 100, 38, 19, 61, 74, 97, 31, 91, 35, 56, 94, 26, 69, 46, 59, 4, 89,
                                       71, 6, 52, 43, 45, 63, 93, 14, 98, 88, 21, 28, 99, 54, 90],
                       'train_disc': [2, 76, 34, 85, 70, 86, 3, 8, 51, 40, 7, 13, 47, 55, 12, 58, 87, 9, 65, 62, 33, 42,
                                      23, 92, 29, 11, 83, 68, 75, 67, 16, 48, 66, 20, 15],
                       'train_sup': [2, 3, 4, 5, 8, 9, 10, 11, 12, 15, 16, 17, 18, 19, 22, 23, 24, 25, 26, 29, 30, 31,
                                     32, 33, 36, 37, 38, 39, 40, 43, 44, 45, 46, 47, 50, 51, 53, 54, 57, 58, 59, 60, 61,
                                     64, 65, 66, 67, 68, 71, 72, 73, 74, 75, 78, 79, 80, 81, 82, 85, 86, 87, 88, 89, 92,
                                     93, 94, 95, 96, 99, 100],
                       },
        },

        # -----------------
        # All the data:

        'all_data': {'all': list(np.arange(100) + 1)}
    }
    return splits


if __name__ == '__main__':
    _splits = get_splits()
    for k, v in zip(_splits.keys(), _splits.values()):
        print('\n' + '- '*20)
        print('number of volumes: {0}'.format(k))
        print('values:', v)
